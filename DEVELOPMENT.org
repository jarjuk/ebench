
* Activate conda ympäristö =pdata=

#+BEGIN_SRC elisp
(conda-env-activate "pdata")
#+END_SRC

#+RESULTS:
: Switched to conda environment: pdata

* References

Ref: https://github.com/vuthalab/RigolInstruments/blob/master/RigolInstruments.py
Ref: [[file:~/work/data-sheets/skoopit/Rigol-mso1000z_series-programming-guide.pdf]]
Ref: [[file:~/work/data-sheets/skoopit]]

* Delivery                                                 

*Development environment only!!*

** Relaseit

*** Show release status

 #+BEGIN_SRC sh :eval no-export :results output
 releaseit.sh show
 #+END_SRC

 #+RESULTS:
 #+begin_example
 /home/jj/bin/releaseit.sh - $Release:0.0.45$
 ------------------------------------------------------------------
 PREV_REL=0.0.8 --> REL=0.0.9-SNAPSHOT
 ------------------------------------------------------------------
 ## 0.0.9-SNAPSHOT/20210404-22:49:46

 - Features implementing
   - timebase: added

 - Features added:
   - measurement: add automagically measurement timestamp

 - Known issues/missing features
   - ebRigol: setup triggering not implemented
   - README.org: API -usage documentation should be enhanced
   - `UTG900.py arb` external waveform, implementation not working
   - `UTG900.py arb` external waveform file, format documentation missing
 ------------------------------------------------------------------
 #+end_example


*** Create release 

 Should not have any files unchecked

 #+BEGIN_SRC sh :eval no-export :results output
 git status
 #+END_SRC

 #+RESULTS:
 : On branch master
 : Your branch is ahead of 'origin/master' by 1 commit.
 :   (use "git push" to publish your local commits)
 : 
 : nothing to commit, working tree clean


 #+BEGIN_SRC sh :eval no-export :results output
 releaseit.sh  create_release commit current VERSION files README.org -  commit tag 2>&1 || true
 #+END_SRC

 #+RESULTS:
 : [master ba4e86f] ## 0.0.9/20210415-14:55:29
 :  1 file changed, 1 insertion(+), 1 deletion(-)
 : [master 29267e1] ## 0.0.9/20210415-14:55:29
 :  2 files changed, 2 insertions(+), 2 deletions(-)



** Install

*** Create =setup.py= package

 #+BEGIN_SRC bash :eval no-export :results output
 cat VERSION
 #+END_SRC

 #+RESULTS:
 : 0.0.10-pre2


 Ref: https://packaging.python.org/guides/distributing-packages-using-setuptools/

 #+BEGIN_SRC bash :eval no-export :results output :exports code
 python3 setup.py  sdist  bdist_wheel
 #+END_SRC

 #+RESULTS:
 #+begin_example
 version 0.0.10-pre2 , packages ['ebench']
 running sdist
 running egg_info
 writing ebench.egg-info/PKG-INFO
 writing dependency_links to ebench.egg-info/dependency_links.txt
 writing entry points to ebench.egg-info/entry_points.txt
 writing requirements to ebench.egg-info/requires.txt
 writing top-level names to ebench.egg-info/top_level.txt
 reading manifest file 'ebench.egg-info/SOURCES.txt'
 writing manifest file 'ebench.egg-info/SOURCES.txt'
 running check
 creating ebench-0.0.10rc2
 creating ebench-0.0.10rc2/ebench
 creating ebench-0.0.10rc2/ebench.egg-info
 creating ebench-0.0.10rc2/examples
 creating ebench-0.0.10rc2/examples/hello
 creating ebench-0.0.10rc2/tmp
 copying files to ebench-0.0.10rc2...
 copying ebRigol -> ebench-0.0.10rc2
 copying ebUnit -> ebench-0.0.10rc2
 copying setup.py -> ebench-0.0.10rc2
 copying ebench/CMDS.py -> ebench-0.0.10rc2/ebench
 copying ebench/Rigol.py -> ebench-0.0.10rc2/ebench
 copying ebench/Unit.py -> ebench-0.0.10rc2/ebench
 copying ebench/__init__.py -> ebench-0.0.10rc2/ebench
 copying ebench/ebMenu.py -> ebench-0.0.10rc2/ebench
 copying ebench/ebMenu.yaml -> ebench-0.0.10rc2/ebench
 copying ebench/ebRigol.py -> ebench-0.0.10rc2/ebench
 copying ebench/ebUnit.py -> ebench-0.0.10rc2/ebench
 copying ebench/ebench.py -> ebench-0.0.10rc2/ebench
 copying ebench/hello.py -> ebench-0.0.10rc2/ebench
 copying ebench.egg-info/PKG-INFO -> ebench-0.0.10rc2/ebench.egg-info
 copying ebench.egg-info/SOURCES.txt -> ebench-0.0.10rc2/ebench.egg-info
 copying ebench.egg-info/dependency_links.txt -> ebench-0.0.10rc2/ebench.egg-info
 copying ebench.egg-info/entry_points.txt -> ebench-0.0.10rc2/ebench.egg-info
 copying ebench.egg-info/requires.txt -> ebench-0.0.10rc2/ebench.egg-info
 copying ebench.egg-info/top_level.txt -> ebench-0.0.10rc2/ebench.egg-info
 copying ebench.egg-info/zip-safe -> ebench-0.0.10rc2/ebench.egg-info
 copying ebench/../RELEASES.md -> ebench-0.0.10rc2/ebench/..
 copying ebench/../VERSION -> ebench-0.0.10rc2/ebench/..
 copying examples/hello/hello.py -> ebench-0.0.10rc2/examples/hello
 copying examples/hello/hello2.py -> ebench-0.0.10rc2/examples/hello
 copying tmp/apu.sh -> ebench-0.0.10rc2/tmp
 Writing ebench-0.0.10rc2/setup.cfg
 Creating tar archive
 removing 'ebench-0.0.10rc2' (and everything under it)
 running bdist_wheel
 running build
 running build_py
 copying ebench/ebUnit.py -> build/lib/ebench
 copying ebench/Unit.py -> build/lib/ebench
 copying ebench/ebRigol.py -> build/lib/ebench
 copying ebench/ebench.py -> build/lib/ebench
 copying ebench/ebMenu.yaml -> build/lib/ebench
 installing to build/bdist.linux-x86_64/wheel
 running install
 running install_lib
 creating build/bdist.linux-x86_64/wheel
 creating build/bdist.linux-x86_64/wheel/ebench
 copying build/lib/ebench/UNI-T.py -> build/bdist.linux-x86_64/wheel/ebench
 copying build/lib/ebench/CMDS.py -> build/bdist.linux-x86_64/wheel/ebench
 copying build/lib/ebench/flycheck_ebench.py -> build/bdist.linux-x86_64/wheel/ebench
 copying build/lib/ebench/Rigol.py -> build/bdist.linux-x86_64/wheel/ebench
 copying build/lib/ebench/ebMenu.yaml -> build/bdist.linux-x86_64/wheel/ebench
 copying build/lib/ebench/ebUnit.py -> build/bdist.linux-x86_64/wheel/ebench
 copying build/lib/ebench/ebMenu.py -> build/bdist.linux-x86_64/wheel/ebench
 copying build/lib/ebench/Unit.py -> build/bdist.linux-x86_64/wheel/ebench
 copying build/lib/ebench/hello.py -> build/bdist.linux-x86_64/wheel/ebench
 copying build/lib/ebench/ebRigol.py -> build/bdist.linux-x86_64/wheel/ebench
 copying build/lib/ebench/__init__.py -> build/bdist.linux-x86_64/wheel/ebench
 copying build/lib/ebench/ebench.py -> build/bdist.linux-x86_64/wheel/ebench
 copying build/lib/ebench/flycheck_ebUnit.py -> build/bdist.linux-x86_64/wheel/ebench
 creating build/bdist.linux-x86_64/wheel/examples
 copying build/lib/examples/__init__.py -> build/bdist.linux-x86_64/wheel/examples
 creating build/bdist.linux-x86_64/wheel/examples/hello
 copying build/lib/examples/hello/hello2.py -> build/bdist.linux-x86_64/wheel/examples/hello
 copying build/lib/examples/hello/hello.py -> build/bdist.linux-x86_64/wheel/examples/hello
 copying build/lib/examples/hello/__init__.py -> build/bdist.linux-x86_64/wheel/examples/hello
 copying build/lib/VERSION -> build/bdist.linux-x86_64/wheel
 copying build/lib/RELEASES.md -> build/bdist.linux-x86_64/wheel
 running install_egg_info
 Copying ebench.egg-info to build/bdist.linux-x86_64/wheel/ebench-0.0.10rc2-py3.9.egg-info
 running install_scripts
 creating build/bdist.linux-x86_64/wheel/ebench-0.0.10rc2.dist-info/WHEEL
 creating 'dist/ebench-0.0.10rc2-py3-none-any.whl' and adding 'build/bdist.linux-x86_64/wheel' to it
 adding 'RELEASES.md'
 adding 'VERSION'
 adding 'ebench/CMDS.py'
 adding 'ebench/Rigol.py'
 adding 'ebench/UNI-T.py'
 adding 'ebench/Unit.py'
 adding 'ebench/__init__.py'
 adding 'ebench/ebMenu.py'
 adding 'ebench/ebMenu.yaml'
 adding 'ebench/ebRigol.py'
 adding 'ebench/ebUnit.py'
 adding 'ebench/ebench.py'
 adding 'ebench/flycheck_ebUnit.py'
 adding 'ebench/flycheck_ebench.py'
 adding 'ebench/hello.py'
 adding 'examples/__init__.py'
 adding 'examples/hello/__init__.py'
 adding 'examples/hello/hello.py'
 adding 'examples/hello/hello2.py'
 adding 'ebench-0.0.10rc2.dist-info/METADATA'
 adding 'ebench-0.0.10rc2.dist-info/WHEEL'
 adding 'ebench-0.0.10rc2.dist-info/entry_points.txt'
 adding 'ebench-0.0.10rc2.dist-info/top_level.txt'
 adding 'ebench-0.0.10rc2.dist-info/zip-safe'
 adding 'ebench-0.0.10rc2.dist-info/RECORD'
 removing build/bdist.linux-x86_64/wheel
 #+end_example


*** Install distribution package

 #+BEGIN_SRC bash :eval no-export :results output
 VERSION_FILE=$(ls -1tr dist/*.tar.gz | tail -1| cut -f2)
 echo VERSION_FILE=$VERSION_FILE
 python3 -m pip install --user $VERSION_FILE  && echo installed $VERSION_FILE
 #+END_SRC

 #+RESULTS:
 #+begin_example
 VERSION_FILE=dist/ebench-0.0.10rc2.tar.gz
 Processing ./dist/ebench-0.0.10rc2.tar.gz
 Requirement already satisfied: pyvisa-py in /home/jj/.local/lib/python3.9/site-packages (from ebench==0.0.10rc2) (0.5.2)
 Requirement already satisfied: absl-py in /home/jj/.local/lib/python3.9/site-packages (from ebench==0.0.10rc2) (0.12.0)
 Requirement already satisfied: six in /home/jj/.local/lib/python3.9/site-packages (from absl-py->ebench==0.0.10rc2) (1.15.0)
 Requirement already satisfied: typing-extensions in /home/jj/.local/lib/python3.9/site-packages (from pyvisa-py->ebench==0.0.10rc2) (3.7.4.3)
 Requirement already satisfied: pyvisa>=1.11.0 in /home/jj/.local/lib/python3.9/site-packages (from pyvisa-py->ebench==0.0.10rc2) (1.11.3)
 Building wheels for collected packages: ebench
   Building wheel for ebench (setup.py): started
   Building wheel for ebench (setup.py): finished with status 'done'
   Created wheel for ebench: filename=ebench-0.0.10rc2-py3-none-any.whl size=34630 sha256=867338cf9b0fda1a681c8412c6bc5da8f658858ed9d220a1ccef10f81a163cf6
   Stored in directory: /home/jj/.cache/pip/wheels/c1/c7/5c/c4d5edb0456f16d043f82cc0c7aa86d5f492d464e384c14716
 Successfully built ebench
 Installing collected packages: ebench
   Attempting uninstall: ebench
     Found existing installation: ebench 0.0.10rc2
     Uninstalling ebench-0.0.10rc2:
       Successfully uninstalled ebench-0.0.10rc2
 Successfully installed ebench-0.0.10rc2
 installed dist/ebench-0.0.10rc2.tar.gz
 #+end_example


*** Testit

#+BEGIN_SRC bash :eval no-export :results output
ebRigol _version
#+END_SRC

#+RESULTS:
: '0.0.9-SNAPSHOT'

#+BEGIN_SRC bash :eval no-export :results output
ebUnit _version
#+END_SRC

#+RESULTS:
: ebUnit - 0.0.8
: '0.0.8'


** Create snapshot

 #+BEGIN_SRC sh :eval no-export :results output
 releaseit.sh  create_snapshot current VERSION files README.org - commit || true
 #+END_SRC

 #+RESULTS:
 : [master c002493] ## 0.0.10-SNAPSHOT/20210415-14:55:49
 :  4 files changed, 52 insertions(+), 44 deletions(-)




* Test and develop

** Rigol test

#+BEGIN_SRC bash :eval no-export :results output
./ebRigol _version
#+END_SRC

#+RESULTS:
: 0.0.8-rev2

#+BEGIN_SRC bash :eval no-export :results output
ebRigol _version
#+END_SRC

#+RESULTS:


** COmmand line test

#+BEGIN_SRC bash :eval no-export :results output
ebUTG900 ?
#+END_SRC

#+RESULTS:
#+begin_example
ebUTG900 - 0.0.6-SNAPSHOT: Tool to control UNIT-T UTG900 Waveform generator

Usage: ebUTG900 [options] [commands and parameters] 

Commands:
           sine  : Generate sine -wave on channel 1|2
         square  : Generate square -wave on channel 1|2
          pulse  : Generate pulse -wave on channel 1|2
            arb  : Upload wave file and use it to generate wave on channel 1|2
             on  : Switch on channel 1|2
            off  : Switch off channel 1|2
          reset  : Send reset to UTG900 signal generator
----------   Record   ----------
              !  : Start recording
              .  : Stop recording
         screen  : Take screenshot
 list_resources  : List pyvisa resources (=pyvisa list_resources() wrapper)'
----------    Misc    ----------
        version  : Output version number
----------    Help    ----------
              q  : Exit
              ?  : List commands
             ??  : List command parameters

More help:
  ebUTG900 --help                          : to list options
  ebUTG900 ? command=<command>             : to get help on command <command> parameters

Examples:
  ebUTG900 ? command=sine                  : help on sine command parameters
  ebUTG900 list_resources                  : Identify --addr option parameter
  ebUTG900 --addr 'USB0::1::2::3::0::INSTR': Run interactively on device found in --addr 'USB0::1::2::3::0::INSTR'
  ebUTG900 --captureDir=pics screen        : Take screenshot to pics directory (form device in default --addr)
  ebUTG900 reset                           : Send reset to UTH900 waveform generator
  ebUTG900 sine channel=2 freq=2kHz        : Generate 2 kHz sine signal on channel 2
  ebUTG900 sine channel=1 square channel=2 : chaining sine generation on channel 1, and square generation on channel 2

Hint:
  Run reset to synchronize ebUTG900 -tool with device state. Ref= ?? command=reset
  One-liner in linux: ebUTG900 --addr $(ebUTG900 list_resources)
#+end_example

#+BEGIN_SRC bash :eval no-export :results output
ebUTG900 reset on channel=1 on channel=2
#+END_SRC

#+RESULTS:

#+BEGIN_SRC bash :eval no-export :results output
ebUTG900  reset off channel=1 off channel=2
#+END_SRC

#+RESULTS:


** Api test
#+BEGIN_SRC python :eval no-export :results output :noweb no :session *Python*
import UTG900
print( UTG900.version())
#+END_SRC

#+RESULTS:
: Python 3.9.1 | packaged by conda-forge | (default, Jan 10 2021, 02:55:42) 
: [GCC 9.3.0] on linux
: Type "help", "copyright", "credits" or "license" for more information.
: 0.0.5-SNAPSHOT


#+BEGIN_SRC python :eval no-export :results output :noweb no :session *Python*
sgen = UTG900.UTG962()
sgen.list_resources()
#+END_SRC

#+RESULTS:
: WARNING:absl:Successfully connected  'USB0::0x6656::0x0834::1485061822::INSTR' with 'UNI-T Technologies,UTG900,1485061822,1.08'
: Traceback (most recent call last):
:   File "<stdin>", line 1, in <module>
:   File "/tmp/babel-ZafpdS/python-xPMIfR", line 2, in <module>
:     sgen.list_resources()
:   File "/home/jj/work/UTG900/UTG900/UTG900.py", line 447, in list_resources
:     return self.rm.list_resources()
: AttributeError: 'UTG962' object has no attribute 'rm'



* Fin                                                              :noexport:


** Emacs variables

   #+RESULTS:

   # Local Variables:
   # org-confirm-babel-evaluate: nil
   # End:
   #


