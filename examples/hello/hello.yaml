# hello.yaml - tangled from EBMENU.org
# 
# Do not edit!! Changes will be overridden

# Define subMenu -entry 'instance1 for controlling instrument in
# Python module 'examples.hello.hello2'. 

- 
  type: subMenu
  menu: instance1
  prompt: Start example Hello (instance 1)
  module: examples.hello.hello2

# Define subMenu -entry 'instance2' for controlling instrument in
# Python module 'examples.hello.hello2'. Instrument constructor receives
# parameter 'greetCount= 100'

- 
  type: subMenu
  menu: instance2
  prompt: Start example Hello (instance 2)
  module: examples.hello.hello2
  kwargs:
      greetCount: 100

# Define 'apiCall' menu-entry 'showCounters' This menu entry dispatches
# two apiCalls: "instance1.greetCount()" and
# "instance2.greetCount(fake=42)". The second API call demostrated
# passing named paramter `fake` to an API -method.

- 
  type: apiCall
  menu: showCounters
  prompt: Show instance1 and instance2 counters
  apiCalls:
    "count1": "instance1.greetCount()"
    "count2": "instance2.greetCount(fake=42)"

# Define 'apiCall' menu-entry 'csvCounters'.  This menu entry
# dispatches two apiCalls: "instance1.greetCount()" and
# "instance2.greetCount()". The result is saved into CSV -file
# hello-counters.csv

- 
  type: apiCall
  menu: csvCounters
  prompt: Save  instance1 and instance2 counters to CSV-file 'hello-counters.csv'
  apiCalls:
    "count1": "instance1.greetCount()"
    "count2": "instance2.greetCount()"
  csvFile: hello-counters.csv
